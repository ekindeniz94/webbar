export enum KubernetesEventStatusReasonEnum {
  SUCCESSFUL_CREATE = 'SuccessfulCreate',
  SUCCESSFUL_DELETE = 'SuccessfulDelete',
  SCHEDULED = 'Scheduled',
  KILLING = 'Killing',
  EVICTED = 'Evicted',
  EXCEEDED_GRACE_PERIOD = 'ExceededGracePeriod',
  FAILED_KILL_POD = 'FailedKillPod',
  FAILED = 'Failed',
  PULLING = 'Pulling',
  PULLED = 'Pulled',
  CREATED = 'Created',
  STARTED = 'Started',
  BACK_OFF = 'BackOff',
  POD_SCHEDULED = 'PodScheduled',
  SUCCESSFUL_ASSIGN = 'SuccessfulAssign',
  FAILED_CREATE = 'FailedCreate',
  FAILED_DELETE = 'FailedDelete',
  FAILED_MOUNT = 'FailedMount',
  FAILED_SCHEDULING = 'FailedScheduling',
  PREEMPTING = 'Preempting',
  FAILED_CREATE_POD_CONTAINER = 'FailedCreatePodContainer',
  NETWORK_NOT_READY = 'NetworkNotReady',
  INSPECT_FAILED = 'InspectFailed',
  ERR_IMAGE_NEVER_PULL = 'ErrImageNeverPull',
  INVALID_DISK_CAPACITY = 'InvalidDiskCapacity',
  FREE_DISK_SPACE_FAILED = 'FreeDiskSpaceFailed',
  UNHEALTHY = 'Unhealthy',
  PROBE_WARNING = 'ProbeWarning',
  FAILED_SYNC = 'FailedSync',
  FAILED_VALIDATION = 'FailedValidation',
  FAILED_POST_START_HOOK = 'FailedPostStartHook',
  FAILED_PRE_STOP_HOOK = 'FailedPreStopHook',
  NODE_READY = 'NodeReady',
  NODE_NOT_READY = 'NodeNotReady',
  NODE_SCHEDULABLE = 'NodeSchedulable',
  NODE_NOT_SCHEDULABLE = 'NodeNotSchedulable',
  STARTING = 'Starting',
  KUBELET_SETUP_FAILED = 'KubeletSetupFailed',
  FAILED_ATTACH_VOLUME = 'FailedAttachVolume',
  VOLUME_RESIZE_FAILED = 'VolumeResizeFailed',
  VOLUME_RESIZE_SUCCESSFUL = 'VolumeResizeSuccessful',
  FILE_SYSTEM_RESIZE_FAILED = 'FileSystemResizeFailed',
  FILE_SYSTEM_RESIZE_SUCCESSFUL = 'FileSystemResizeSuccessful',
  FAILED_MAP_VOLUME = 'FailedMapVolume',
  ALREADY_MOUNTED_VOLUME = 'AlreadyMountedVolume',
  SUCCESSFUL_ATTACH_VOLUME = 'SuccessfulAttachVolume',
  SUCCESSFUL_MOUNT_VOLUME = 'SuccessfulMountVolume',
  REBOOTED = 'Rebooted',
  SHUTDOWN = 'Shutdown',
  CONTAINER_GC_FAILED = 'ContainerGCFailed',
  IMAGE_GC_FAILED = 'ImageGCFailed',
  FAILED_NODE_ALLOCATABLE_ENFORCEMENT = 'FailedNodeAllocatableEnforcement',
  NODE_ALLOCATABLE_ENFORCED = 'NodeAllocatableEnforced',
  SANDBOX_CHANGED = 'SandboxChanged',
  FAILED_CREATE_POD_SAND_BOX = 'FailedCreatePodSandBox',
  FAILED_POD_SAND_BOX_STATUS = 'FailedPodSandBoxStatus',
  FAILED_MOUNT_ON_FILESYSTEM_MISMATCH = 'FailedMountOnFilesystemMismatch',
  BACK_OFF_START = 'BackOffStart',
  WAIT_FOR_FIRST_CONSUMER = 'WaitForFirstConsumer',
  PROVISIONING = 'Provisioning',
  EXTERNAL_PROVISIONING = 'ExternalProvisioning',
  PROVISIONING_SUCCEEDED = 'ProvisioningSucceeded',
  COMPLETED = 'Completed' // Job
}
